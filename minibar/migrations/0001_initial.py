# Generated by Django 4.2.16 on 2025-07-08 20:34

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hotel_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MinibarInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('inspection_type', models.CharField(choices=[('routine', 'Routine Inspection'), ('checkout', 'Checkout Inspection'), ('maintenance', 'Maintenance Inspection'), ('complaint', 'Complaint Investigation')], default='routine', max_length=20)),
                ('scheduled_date', models.DateTimeField()),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('temperature_reading', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('cleanliness_rating', models.PositiveIntegerField(blank=True, help_text='Rating from 1 (poor) to 5 (excellent)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('issues_found', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('photos', models.ImageField(blank=True, null=True, upload_to='minibar_inspections/')),
                ('requires_maintenance', models.BooleanField(default=False)),
                ('requires_restocking', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inspector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='minibar_inspections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='MinibarProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('product_type', models.CharField(choices=[('beverage', 'Beverage'), ('snack', 'Snack'), ('alcohol', 'Alcohol'), ('soft_drink', 'Soft Drink'), ('water', 'Water'), ('juice', 'Juice'), ('candy', 'Candy'), ('nuts', 'Nuts'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('barcode', models.CharField(blank=True, max_length=50, unique=True)),
                ('volume_size', models.CharField(blank=True, help_text='e.g., 330ml, 50g', max_length=50)),
                ('calories', models.PositiveIntegerField(blank=True, null=True)),
                ('alcohol_content', models.DecimalField(blank=True, decimal_places=2, help_text='Alcohol percentage (e.g., 5.0 for 5%)', max_digits=4, null=True)),
                ('allergen_info', models.TextField(blank=True)),
                ('expiry_period_days', models.PositiveIntegerField(default=365, help_text='Number of days before expiry from purchase date')),
                ('supplier', models.CharField(blank=True, max_length=200)),
                ('supplier_contact', models.CharField(blank=True, max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='minibar_products/')),
                ('is_active', models.BooleanField(default=True)),
                ('requires_id_check', models.BooleanField(default=False, help_text='For alcoholic beverages')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['product_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MinibarRestocking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restocking_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('scheduled_date', models.DateTimeField()),
                ('started_time', models.DateTimeField(blank=True, null=True)),
                ('completed_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_restocking', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_restocking', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='MinibarSetup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room_types', models.ManyToManyField(related_name='minibar_setups', to='hotel_management.roomtype')),
            ],
        ),
        migrations.CreateModel(
            name='RoomMinibar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'Under Maintenance'), ('restocking', 'Being Restocked'), ('out_of_order', 'Out of Order'), ('locked', 'Locked')], default='active', max_length=20)),
                ('last_restocked_date', models.DateTimeField(blank=True, null=True)),
                ('last_checked_date', models.DateTimeField(blank=True, null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, help_text='Current temperature in Celsius', max_digits=4, null=True)),
                ('is_locked', models.BooleanField(default=False)),
                ('lock_code', models.CharField(blank=True, max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='minibar', to='hotel_management.room')),
                ('setup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='room_minibars', to='minibar.minibarsetup')),
            ],
        ),
        migrations.CreateModel(
            name='MinibarSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_rate', models.DecimalField(decimal_places=4, default=Decimal('0.1000'), help_text='Tax rate as decimal (e.g., 0.1000 for 10%)', max_digits=5)),
                ('default_detection_delay', models.PositiveIntegerField(default=30, help_text='Minutes to wait before marking consumption as confirmed')),
                ('auto_charge_on_checkout', models.BooleanField(default=True, help_text='Automatically charge minibar consumption on checkout')),
                ('require_guest_confirmation', models.BooleanField(default=True, help_text='Require guest confirmation for charges above threshold')),
                ('confirmation_threshold', models.DecimalField(decimal_places=2, default=Decimal('50.00'), help_text='Amount above which guest confirmation is required', max_digits=8)),
                ('inspection_frequency_days', models.PositiveIntegerField(default=7, help_text='How often to inspect minibars (in days)')),
                ('restocking_threshold_percentage', models.PositiveIntegerField(default=50, help_text='Restock when inventory falls below this percentage')),
                ('temperature_min', models.DecimalField(decimal_places=1, default=Decimal('2.0'), help_text='Minimum acceptable temperature in Celsius', max_digits=4)),
                ('temperature_max', models.DecimalField(decimal_places=1, default=Decimal('8.0'), help_text='Maximum acceptable temperature in Celsius', max_digits=4)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Minibar Settings',
                'verbose_name_plural': 'Minibar Settings',
            },
        ),
        migrations.CreateModel(
            name='MinibarRestockingItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_added', models.PositiveIntegerField()),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restocking_items', to='minibar.minibarproduct')),
                ('restocking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restocking_items', to='minibar.minibarrestocking')),
            ],
        ),
        migrations.AddField(
            model_name='minibarrestocking',
            name='minibar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restocking_records', to='minibar.roomminibar'),
        ),
        migrations.AddField(
            model_name='minibarrestocking',
            name='performed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_restocking', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MinibarInspectionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_quantity', models.PositiveIntegerField()),
                ('actual_quantity', models.PositiveIntegerField()),
                ('condition', models.CharField(choices=[('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('expired', 'Expired'), ('damaged', 'Damaged')], default='good', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('inspection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspection_items', to='minibar.minibarinspection')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspection_items', to='minibar.minibarproduct')),
            ],
        ),
        migrations.AddField(
            model_name='minibarinspection',
            name='minibar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='minibar.roomminibar'),
        ),
        migrations.CreateModel(
            name='MinibarConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumption_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('quantity_consumed', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('consumption_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('detected_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Confirmation'), ('confirmed', 'Confirmed'), ('disputed', 'Disputed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('detection_method', models.CharField(choices=[('manual', 'Manual Entry'), ('sensor', 'Sensor Detection'), ('rfid', 'RFID Tracking'), ('checkout', 'Checkout Inspection')], default='manual', max_length=50)),
                ('confirmation_time', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('is_charged', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_consumptions', to=settings.AUTH_USER_MODEL)),
                ('minibar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumptions', to='minibar.roomminibar')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumptions', to='minibar.minibarproduct')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='minibar_consumptions', to='hotel_management.reservation')),
            ],
            options={
                'ordering': ['-consumption_time'],
            },
        ),
        migrations.CreateModel(
            name='MinibarBilling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('billing_period_start', models.DateTimeField()),
                ('billing_period_end', models.DateTimeField()),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('finalized', 'Finalized'), ('charged', 'Charged to Room'), ('paid', 'Paid'), ('disputed', 'Disputed')], default='draft', max_length=20)),
                ('generated_date', models.DateTimeField(auto_now_add=True)),
                ('finalized_date', models.DateTimeField(blank=True, null=True)),
                ('charged_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='minibar_billings', to='hotel_management.reservation')),
            ],
            options={
                'ordering': ['-generated_date'],
            },
        ),
        migrations.CreateModel(
            name='MinibarSetupProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('position', models.CharField(blank=True, help_text='Position in minibar (e.g., Shelf 1, Door)', max_length=50)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setup_items', to='minibar.minibarproduct')),
                ('setup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setup_products', to='minibar.minibarsetup')),
            ],
            options={
                'ordering': ['position', 'product__name'],
                'unique_together': {('setup', 'product')},
            },
        ),
        migrations.CreateModel(
            name='MinibarInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=50)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('minibar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_inventory', to='minibar.roomminibar')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='minibar_inventory', to='minibar.minibarproduct')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['product__name'],
                'unique_together': {('minibar', 'product')},
            },
        ),
    ]
