# Generated by Django 4.2.16 on 2025-07-08 20:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hotel_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SMSCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('recipient_type', models.CharField(choices=[('all_customers', 'All Customers'), ('active_guests', 'Active Guests'), ('past_guests', 'Past Guests'), ('vip_customers', 'VIP Customers'), ('birthday_customers', 'Birthday Customers'), ('custom_list', 'Custom List')], max_length=20)),
                ('scheduled_send_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('completed', 'Completed'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('messages_sent', models.PositiveIntegerField(default=0)),
                ('messages_delivered', models.PositiveIntegerField(default=0)),
                ('messages_failed', models.PositiveIntegerField(default=0)),
                ('estimated_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('actual_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('custom_recipients', models.ManyToManyField(blank=True, related_name='sms_campaigns', to='hotel_management.customer')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SMSProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('provider_type', models.CharField(choices=[('twilio', 'Twilio'), ('aws_sns', 'AWS SNS'), ('nexmo', 'Nexmo/Vonage'), ('clickatell', 'Clickatell'), ('textmagic', 'TextMagic'), ('custom', 'Custom Provider')], max_length=20)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('api_endpoint', models.URLField(blank=True)),
                ('account_sid', models.CharField(blank=True, max_length=100)),
                ('auth_token', models.CharField(blank=True, max_length=100)),
                ('sender_id', models.CharField(blank=True, max_length=20)),
                ('webhook_url', models.URLField(blank=True)),
                ('cost_per_message', models.DecimalField(decimal_places=4, default=0, max_digits=6)),
                ('max_message_length', models.PositiveIntegerField(default=160)),
                ('supports_unicode', models.BooleanField(default=True)),
                ('supported_countries', models.TextField(blank=True, help_text='Comma-separated list of supported country codes')),
                ('daily_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('monthly_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('current_daily_usage', models.PositiveIntegerField(default=0)),
                ('current_monthly_usage', models.PositiveIntegerField(default=0)),
                ('last_reset_date', models.DateField(auto_now_add=True)),
                ('configuration', models.JSONField(blank=True, default=dict, help_text='Additional provider-specific configuration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SMSStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_sent', models.PositiveIntegerField(default=0)),
                ('total_delivered', models.PositiveIntegerField(default=0)),
                ('total_failed', models.PositiveIntegerField(default=0)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('transactional_count', models.PositiveIntegerField(default=0)),
                ('promotional_count', models.PositiveIntegerField(default=0)),
                ('notification_count', models.PositiveIntegerField(default=0)),
                ('reminder_count', models.PositiveIntegerField(default=0)),
                ('alert_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SMSWebhookLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_message_id', models.CharField(blank=True, max_length=100)),
                ('event_type', models.CharField(max_length=50)),
                ('payload', models.JSONField()),
                ('processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True)),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhook_logs', to='sms_service.smsprovider')),
            ],
            options={
                'ordering': ['-received_at'],
            },
        ),
        migrations.CreateModel(
            name='SMSTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('template_type', models.CharField(choices=[('reservation_confirmation', 'Reservation Confirmation'), ('checkin_reminder', 'Check-in Reminder'), ('checkout_reminder', 'Check-out Reminder'), ('welcome_message', 'Welcome Message'), ('payment_reminder', 'Payment Reminder'), ('payment_confirmation', 'Payment Confirmation'), ('room_ready', 'Room Ready Notification'), ('restaurant_booking', 'Restaurant Booking'), ('service_reminder', 'Service Reminder'), ('birthday_wishes', 'Birthday Wishes'), ('special_offer', 'Special Offer'), ('feedback_request', 'Feedback Request'), ('emergency_alert', 'Emergency Alert'), ('custom', 'Custom Message')], max_length=30)),
                ('subject', models.CharField(blank=True, max_length=100)),
                ('message_template', models.TextField(help_text='Use variables like {customer_name}, {room_number}, {check_in_date}, etc.')),
                ('is_active', models.BooleanField(default=True)),
                ('auto_send', models.BooleanField(default=False, help_text='Automatically send based on triggers')),
                ('send_delay_minutes', models.PositiveIntegerField(default=0, help_text='Delay before sending (in minutes)')),
                ('language', models.CharField(choices=[('en', 'English'), ('es', 'Spanish'), ('fr', 'French'), ('de', 'German'), ('it', 'Italian'), ('pt', 'Portuguese'), ('zh', 'Chinese'), ('ja', 'Japanese'), ('ar', 'Arabic')], default='en', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['template_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SMSSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_sender_id', models.CharField(default='HOTEL', max_length=20)),
                ('enable_auto_messaging', models.BooleanField(default=True)),
                ('enable_delivery_reports', models.BooleanField(default=True)),
                ('default_retry_attempts', models.PositiveIntegerField(default=3)),
                ('retry_delay_minutes', models.PositiveIntegerField(default=30)),
                ('max_message_length', models.PositiveIntegerField(default=160)),
                ('enable_unicode', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(default='22:00')),
                ('quiet_hours_end', models.TimeField(default='08:00')),
                ('enable_quiet_hours', models.BooleanField(default=True)),
                ('opt_out_keywords', models.TextField(default='STOP,UNSUBSCRIBE,OPTOUT', help_text='Comma-separated list of opt-out keywords')),
                ('opt_in_keywords', models.TextField(default='START,SUBSCRIBE,OPTIN', help_text='Comma-separated list of opt-in keywords')),
                ('enable_double_opt_in', models.BooleanField(default=False)),
                ('webhook_secret', models.CharField(blank=True, max_length=100)),
                ('enable_rate_limiting', models.BooleanField(default=True)),
                ('rate_limit_per_minute', models.PositiveIntegerField(default=100)),
                ('enable_cost_alerts', models.BooleanField(default=True)),
                ('daily_cost_threshold', models.DecimalField(decimal_places=2, default=100, max_digits=10)),
                ('monthly_cost_threshold', models.DecimalField(decimal_places=2, default=1000, max_digits=10)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SMS Settings',
                'verbose_name_plural': 'SMS Settings',
            },
        ),
        migrations.CreateModel(
            name='SMSMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('recipient_name', models.CharField(max_length=200)),
                ('recipient_phone', models.CharField(max_length=20)),
                ('message_type', models.CharField(choices=[('transactional', 'Transactional'), ('promotional', 'Promotional'), ('notification', 'Notification'), ('reminder', 'Reminder'), ('alert', 'Alert')], default='transactional', max_length=20)),
                ('subject', models.CharField(blank=True, max_length=100)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('queued', 'Queued'), ('sending', 'Sending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('scheduled_send_time', models.DateTimeField(blank=True, null=True)),
                ('sent_time', models.DateTimeField(blank=True, null=True)),
                ('delivered_time', models.DateTimeField(blank=True, null=True)),
                ('external_message_id', models.CharField(blank=True, help_text="Provider's message ID", max_length=100)),
                ('cost', models.DecimalField(decimal_places=4, default=0, max_digits=6)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('sender_id', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='sms_service.smscampaign')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sms_messages', to='hotel_management.customer')),
                ('reservation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sms_messages', to='hotel_management.reservation')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='sms_service.smstemplate')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SMSDeliveryReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_message_id', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=50)),
                ('delivery_time', models.DateTimeField(blank=True, null=True)),
                ('error_code', models.CharField(blank=True, max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('provider_response', models.JSONField(blank=True, default=dict)),
                ('webhook_received_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_reports', to='sms_service.smsmessage')),
            ],
            options={
                'ordering': ['-webhook_received_at'],
            },
        ),
        migrations.AddField(
            model_name='smscampaign',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='sms_service.smstemplate'),
        ),
        migrations.CreateModel(
            name='SMSBlacklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('reason', models.CharField(choices=[('opted_out', 'Opted Out'), ('invalid_number', 'Invalid Number'), ('spam_complaint', 'Spam Complaint'), ('manual_block', 'Manual Block')], default='opted_out', max_length=20)),
                ('blocked_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('blocked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hotel_management.customer')),
            ],
            options={
                'ordering': ['-blocked_date'],
            },
        ),
        migrations.CreateModel(
            name='SMSAutomationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('trigger_event', models.CharField(choices=[('reservation_created', 'Reservation Created'), ('reservation_confirmed', 'Reservation Confirmed'), ('checkin_due', 'Check-in Due'), ('checkout_due', 'Check-out Due'), ('payment_due', 'Payment Due'), ('payment_received', 'Payment Received'), ('birthday', 'Customer Birthday'), ('anniversary', 'Stay Anniversary'), ('room_ready', 'Room Ready'), ('service_request', 'Service Request'), ('complaint_received', 'Complaint Received'), ('feedback_request', 'Feedback Request')], max_length=30)),
                ('delay_minutes', models.PositiveIntegerField(default=0, help_text='Delay after trigger event (in minutes)')),
                ('conditions', models.JSONField(blank=True, default=dict, help_text='Additional conditions for triggering (JSON format)')),
                ('is_active', models.BooleanField(default=True)),
                ('applies_to_vip_only', models.BooleanField(default=False)),
                ('max_sends_per_customer', models.PositiveIntegerField(default=1, help_text='Maximum times to send this message to the same customer')),
                ('time_restrictions', models.JSONField(blank=True, default=dict, help_text='Time restrictions for sending (e.g., only between 9 AM - 6 PM)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='automation_rules', to='sms_service.smstemplate')),
            ],
            options={
                'ordering': ['trigger_event', 'name'],
            },
        ),
    ]
